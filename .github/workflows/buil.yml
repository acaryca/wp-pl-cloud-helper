name: Création du zip de l'extension Wordpress
on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the date
        id: date
        run: |
          export TZ=America/Toronto
          echo "::set-output name=date::$(date +'%m%d%H%M%S')"

      - name: Read INFOS.json
        id: infos
        run: |
          echo "::set-output name=dev::$(jq -r .dev INFOS.json)"
          echo "::set-output name=version::$(jq -r .version INFOS.json)"
        shell: bash

      - name: Change version in files
        run: |
          VERSION=${{ steps.infos.outputs.version }}${{ steps.infos.outputs.dev == 'true' && format('-dev-{0}', steps.date.outputs.date) || '' }}
          DEV=${{ steps.infos.outputs.dev }}
          # Mise à jour dans acary-cloud-helper.php
          sed -i "s/Version: .*/Version: $VERSION/g" acary-cloud-helper.php
          sed -i "s/if ( ! defined( 'ACARYCLOUDHELPER_VERSION' ) ) define( 'ACARYCLOUDHELPER_VERSION', '.*' );/if ( ! defined( 'ACARYCLOUDHELPER_VERSION' ) ) define( 'ACARYCLOUDHELPER_VERSION', '$VERSION' );/g" acary-cloud-helper.php
          sed -i "s/define('ADNCOMM_CORE_PL_DEV', .*);/define('ADNCOMM_CORE_PL_DEV', $DEV);/g" acary-cloud-helper.php
          # Mise à jour dans readme.txt
          sed -i "s/Stable tag: .*/Stable tag: $VERSION/g" readme.txt

      - name: Commit and push version changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add acary-cloud-helper.php readme.txt
          git commit -m "Update version to $VERSION"
          git push

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ steps.infos.outputs.version }}${{ steps.infos.outputs.dev == 'true' && format('-dev-{0}', steps.date.outputs.date) || '' }}
          release_name: ${{ steps.infos.outputs.version }}${{ steps.infos.outputs.dev == 'true' && format('-dev-{0}', steps.date.outputs.date) || '' }}
          draft: false
          prerelease: ${{ steps.infos.outputs.dev == 'true' }}
          generate_release_notes: false
